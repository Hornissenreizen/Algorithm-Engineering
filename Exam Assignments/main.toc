\contentsline {section}{\numberline {1}Introduction to Algorithm Engineering}{3}{section.1}%
\contentsline {subsection}{\numberline {1.1}Analyzing slide 15}{3}{subsection.1.1}%
\contentsline {subsection}{\numberline {1.2}Chapter 1 from Computer Systems: A Programmer's Perspective}{5}{subsection.1.2}%
\contentsline {subsubsection}{\numberline {1.2.1}Memory Hierarchy}{5}{subsubsection.1.2.1}%
\contentsline {subsubsection}{\numberline {1.2.2}Virtual Memory}{6}{subsubsection.1.2.2}%
\contentsline {subsection}{\numberline {1.3}Parallelizing "Estimating $\pi $ using Monte Carlo"}{7}{subsection.1.3}%
\contentsline {section}{\numberline {2}False Sharing, Race Conditions, and Schedules}{8}{section.2}%
\contentsline {subsection}{\numberline {2.1}False Sharing}{8}{subsection.2.1}%
\contentsline {subsection}{\numberline {2.2}There's plenty of room at the Top}{9}{subsection.2.2}%
\contentsline {subsubsection}{\numberline {2.2.1}Software}{9}{subsubsection.2.2.1}%
\contentsline {subsubsection}{\numberline {2.2.2}Algorithms}{10}{subsubsection.2.2.2}%
\contentsline {subsubsection}{\numberline {2.2.3}Hardware Architecture}{10}{subsubsection.2.2.3}%
\contentsline {subsection}{\numberline {2.3}Parallelizing pi\_numerical\_integration.cpp}{12}{subsection.2.3}%
\contentsline {section}{\numberline {3}Parallelizing Code with OpenMP}{13}{section.3}%
\contentsline {subsection}{\numberline {3.1}Chapter 3 of Introduction to Parallel Computing}{13}{subsection.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Comparing code snippets}{13}{subsubsection.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}Game of Life}{14}{subsubsection.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}Optimizing Random Shooting}{14}{subsubsection.3.1.3}%
\contentsline {section}{\numberline {4}Quicksort and Concurrency}{15}{section.4}%
\contentsline {subsection}{\numberline {4.1}Comparing quicksort implementations}{15}{subsection.4.1}%
\contentsline {subsubsection}{\numberline {4.1.1}Benchmarking environment}{15}{subsubsection.4.1.1}%
\contentsline {subsubsection}{\numberline {4.1.2}Running time comparison with different numbers of threads}{17}{subsubsection.4.1.2}%
\contentsline {subsubsection}{\numberline {4.1.3}Running time comparison with different array sizes}{18}{subsubsection.4.1.3}%
\contentsline {subsubsection}{\numberline {4.1.4}Explaining the results}{19}{subsubsection.4.1.4}%
\contentsline {subsection}{\numberline {4.2}What every systems programmer should know about concurrency}{20}{subsection.4.2}%
\contentsline {subsubsection}{\numberline {4.2.1}Why it is not enough to declare shared variables as volatile}{20}{subsubsection.4.2.1}%
\contentsline {subsubsection}{\numberline {4.2.2}But what if my ISA doesn't support atomic access to my custom data structure / code section}{20}{subsubsection.4.2.2}%
\contentsline {section}{\numberline {5}Auto Vectorization}{21}{section.5}%
\contentsline {subsection}{\numberline {5.1}Characteristics of SSE, AVX(2) and AVX-512}{21}{subsection.5.1}%
\contentsline {subsection}{\numberline {5.2}Impact of Memory Aliasing on Performance}{21}{subsection.5.2}%
\contentsline {subsection}{\numberline {5.3}Advantages of Unit Stride Memory Access}{21}{subsection.5.3}%
\contentsline {subsection}{\numberline {5.4}When to Prefer Structure of Arrays}{22}{subsection.5.4}%
\contentsline {section}{\numberline {6}Guided Vectorization and Data Types for Vector Intrinsics}{23}{section.6}%
\contentsline {subsection}{\numberline {6.1}Vectorization Clauses}{23}{subsection.6.1}%
\contentsline {subsubsection}{\numberline {6.1.1}AVX512 data types}{24}{subsubsection.6.1.1}%
\contentsline {subsubsection}{\numberline {6.1.2}Intel MMX}{24}{subsubsection.6.1.2}%
