\contentsline {section}{\numberline {1}Introduction to Algorithm Engineering}{3}{section.1}%
\contentsline {subsection}{\numberline {1.1}Analyzing slide 15}{3}{subsection.1.1}%
\contentsline {subsection}{\numberline {1.2}Chapter 1 from Computer Systems: A Programmer's Perspective}{5}{subsection.1.2}%
\contentsline {subsubsection}{\numberline {1.2.1}Memory Hierarchy}{5}{subsubsection.1.2.1}%
\contentsline {subsubsection}{\numberline {1.2.2}Virtual Memory}{6}{subsubsection.1.2.2}%
\contentsline {subsection}{\numberline {1.3}Parallelizing "Estimating $\pi $ using Monte Carlo"}{7}{subsection.1.3}%
\contentsline {section}{\numberline {2}False Sharing, Race Conditions, and Schedules}{8}{section.2}%
\contentsline {subsection}{\numberline {2.1}False Sharing}{8}{subsection.2.1}%
\contentsline {subsection}{\numberline {2.2}There's plenty of room at the Top}{9}{subsection.2.2}%
\contentsline {subsubsection}{\numberline {2.2.1}Software}{9}{subsubsection.2.2.1}%
\contentsline {subsubsection}{\numberline {2.2.2}Algorithms}{10}{subsubsection.2.2.2}%
\contentsline {subsubsection}{\numberline {2.2.3}Hardware Architecture}{10}{subsubsection.2.2.3}%
\contentsline {subsection}{\numberline {2.3}Parallelizing pi\_numerical\_integration.cpp}{12}{subsection.2.3}%
\contentsline {section}{\numberline {3}Parallelizing Code with OpenMP}{13}{section.3}%
\contentsline {subsection}{\numberline {3.1}Chapter 3 of Introduction to Parallel Computing}{13}{subsection.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Comparing code snippets}{13}{subsubsection.3.1.1}%
\contentsline {subsubsection}{\numberline {3.1.2}Game of Life}{14}{subsubsection.3.1.2}%
\contentsline {subsubsection}{\numberline {3.1.3}Optimizing Random Shooting}{14}{subsubsection.3.1.3}%
\contentsline {section}{\numberline {4}Quicksort and Concurrency}{16}{section.4}%
\contentsline {subsection}{\numberline {4.1}Comparing quicksort implementations}{16}{subsection.4.1}%
\contentsline {subsubsection}{\numberline {4.1.1}Benchmarking environment}{16}{subsubsection.4.1.1}%
\contentsline {subsubsection}{\numberline {4.1.2}Running time comparison with different numbers of threads}{17}{subsubsection.4.1.2}%
\contentsline {subsubsection}{\numberline {4.1.3}Running time comparison with different array sizes}{18}{subsubsection.4.1.3}%
\contentsline {subsubsection}{\numberline {4.1.4}Explaining the results}{19}{subsubsection.4.1.4}%
\contentsline {subsection}{\numberline {4.2}What every systems programmer should know about concurrency}{20}{subsection.4.2}%
\contentsline {subsubsection}{\numberline {4.2.1}Why it is not enough to declare shared variables as volatile}{20}{subsubsection.4.2.1}%
\contentsline {subsubsection}{\numberline {4.2.2}But what if my ISA doesn't support atomic access to my custom data structure / code section}{20}{subsubsection.4.2.2}%
\contentsline {section}{\numberline {5}Auto Vectorization}{21}{section.5}%
\contentsline {subsection}{\numberline {5.1}Characteristics of SSE, AVX(2) and AVX-512}{21}{subsection.5.1}%
\contentsline {subsection}{\numberline {5.2}Impact of Memory Aliasing on Performance}{21}{subsection.5.2}%
\contentsline {subsection}{\numberline {5.3}Advantages of Unit Stride Memory Access}{22}{subsection.5.3}%
\contentsline {subsection}{\numberline {5.4}When to Prefer Structure of Arrays}{22}{subsection.5.4}%
\contentsline {section}{\numberline {6}Guided Vectorization and Data Types for Vector Intrinsics}{23}{section.6}%
\contentsline {subsection}{\numberline {6.1}Vectorization Clauses}{23}{subsection.6.1}%
\contentsline {subsubsection}{\numberline {6.1.1}AVX512 data types}{24}{subsubsection.6.1.1}%
\contentsline {subsubsection}{\numberline {6.1.2}Intel MMX}{24}{subsubsection.6.1.2}%
\contentsline {section}{\numberline {7}Vector Intrinsics and Instruction-Level Parallelism}{27}{section.7}%
\contentsline {subsection}{\numberline {7.1}Analyzing slide 14}{27}{subsection.7.1}%
\contentsline {subsubsection}{\numberline {7.1.1}Latency and Throughput}{29}{subsubsection.7.1.1}%
\contentsline {subsubsection}{\numberline {7.1.2}Analyzing Vectorized Hash Tables Across CPU Architectures}{29}{subsubsection.7.1.2}%
\contentsline {section}{\numberline {8}Cache and Main Memory}{31}{section.8}%
\contentsline {subsection}{\numberline {8.1}How do bandwidth-bound computations differ from compute-bound computations?}{31}{subsection.8.1}%
\contentsline {subsection}{\numberline {8.2}Influence of temporal locality and spatial locality on program performance}{31}{subsection.8.2}%
\contentsline {subsection}{\numberline {8.3}Cache Associativity}{32}{subsection.8.3}%
\contentsline {subsection}{\numberline {8.4}An Overview of Cache Optimization Techniques and Cache-Aware Numerical Algorithms}{33}{subsection.8.4}%
\contentsline {section}{\numberline {9}Debugging and Profiling}{36}{section.9}%
\contentsline {subsection}{\numberline {9.1}Donald Knuth on Premature Optimization}{36}{subsection.9.1}%
\contentsline {subsection}{\numberline {9.2}Debugging With cout Is a Valid Alternative}{36}{subsection.9.2}%
\contentsline {section}{\numberline {10}Designing SSD-Friendly Applications}{37}{section.10}%
\contentsline {subsection}{\numberline {10.1}Adopt Compact Data Structures}{37}{subsection.10.1}%
\contentsline {subsection}{\numberline {10.2}Designing SSD-friendly Applications for Better Application Performance and Higher IO Efficiency}{37}{subsection.10.2}%
\contentsline {section}{\numberline {11}Advanced Topics}{39}{section.11}%
\contentsline {subsection}{\numberline {11.1}Cancellation Points in OpenMP}{39}{subsection.11.1}%
\contentsline {subsection}{\numberline {11.2}CUDA}{40}{subsection.11.2}%
\contentsline {subsection}{\numberline {11.3}MPI}{41}{subsection.11.3}%
